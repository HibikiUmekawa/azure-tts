<speak version="1.0" xml:lang="ja-JP">
    <voice name="ja-JP-NanamiNeural">
  
    いよいよ、このシリーズの最終回です。  
    今回は、ここまで作ってきたすべての要素をまとめて、  
    あなたの「完成版ゲーム」を仕上げていきます。  
  
    テーマは、「全体をつなげて完成させる」です。  
  
    <break time="1s"/>
  
    これまでに学んだ内容を簡単に振り返ってみましょう。  
    第一回では、Pyxelの基本を使って画面を作り、  
    第二回では、落下物をキャッチしてスコアを加算するゲームを作りました。  
    第三回では、効果音や演出を加えて、  
    第四回では、ゲーム全体の流れやアニメーション、BGMを整えてきました。  
  
    今回はいよいよ、それらを一つに組み合わせて、完成版として動かします。  
  
    <break time="2s"/>
  
    まず最初に、全体の構成を整理しておきましょう。  
    ゲームは、「スタート画面」「プレイ画面」「ゲームオーバー画面」の3つで構成されています。  
    それぞれに表示や音、処理を分けて記述してありますね。  
    この3つの流れが正しく動くか、もう一度確認しておきましょう。  
  
    <break time="3s"/>
  
    次に、リファクタリングで分けた関数を組み合わせます。  
    プレイヤーの更新、落下物の更新、スコアの更新、描画の処理。  
    それぞれが独立して動くようにしたことで、  
    これから追加したい演出や新しい機能も入れやすくなっています。  
  
    関数の呼び出し順や処理の流れは、資料を見ながら確認してください。  
  
    <break time="4s"/>
  
    では、ここで実際に「完成版」を動かしてみましょう。  
    実行すると、スタート画面が表示され、スペースキーでゲームが始まります。  
    プレイヤーが動き、落下物が落ちてきて、キャッチするたびにスコアが上がり、音が鳴ります。  
    ミスが3回になるとゲームオーバーになり、BGMが切り替わります。  
    そして、Rキーを押すと再スタートできるようになっています。  
  
    <break time="6s"/>
  
    このように、一連の流れがすべて自然に動いていれば、完成です。  
    コードの長さは最初よりも増えましたが、  
    構造を整理しておいたおかげで、どこで何が行われているかがすぐにわかります。  
  
    もしうまく動かない部分があれば、  
    まず「状態の切り替え」と「関数の呼び出し順」を確認してみましょう。  
    それが直ると、全体がスムーズに動くようになります。  
  
    <break time="5s"/>
  
    ここまでできたら、自由にアレンジしてみましょう。  
    たとえば、落下物の形やスピードを変えたり、  
    背景を動かしたり、BGMをオリジナルにしてもいいですね。  
    画面にスコアランキングを表示するのも面白いです。  
    プログラムの仕組みはもうできているので、  
    あとはあなたのアイデア次第でどんどん進化させることができます。  
  
    <break time="6s"/>
  
    では、最後にこのシリーズ全体を振り返りましょう。  
    あなたはこの4回の授業で、  
    一からPythonとPyxelを使って、  
    ゲームの仕組み、動き、音、演出をすべて自分の手で作れるようになりました。  
  
    これは立派な「クリエイティブ作品」です。  
    単にプログラムを書くのではなく、  
    自分の考えを形にする力を身につけた、ということです。  
  
    <break time="5s"/>
  
    ここから先は、自分の好きなテーマで新しいゲームを作ってみましょう。  
    たとえば、避けるゲーム、シューティング、パズルなど、  
    今学んだ基礎を使えば、どんなジャンルにも応用できます。  
  
    そして、作品を誰かに見せてみましょう。  
    「すごいね！」とか「こうしたらもっと面白くなるね！」という反応が、  
    次の学びへのエネルギーになります。  
  
    <break time="5s"/>
  
    それでは、これでPyxelゲーム制作のシリーズは終了です。  
    ここまで本当によく頑張りました。  
    自分の手でゲームを作り上げたことを、ぜひ誇りに思ってください。  
  
    これからも、プログラミングを楽しみながら、  
    自分のアイデアをどんどん形にしていきましょう。  
  
    ありがとうございました。  
    また次の講座でお会いしましょう。  
  
    </voice>
  </speak>
  